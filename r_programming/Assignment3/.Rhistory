library(slidify)
swirl()
swirl()
library(swirl
)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(lapply())
class(cls_list
)
as.character(cls_list)
sapply(flags,class)
cls_vect <- sapply(flags,class)
class(cls_vect)
sum(flags@orange)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_colors, range)
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
head(shape_mat)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_val <- lapply(flags, unique)
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sappy(flags, unique)
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmasses, summary)
tapply(flags$population, flags$landmass, summary)
bye()
?gl
gl(1,2)
gl(2,2)
library(datasets)
data("iris")
?iris
dim(iris)
head(iris)
vapply(iris$Sepal.Length, iris$Species=='setosa', mean)
vapply(iris$Sepal.Length, iris$Species, mean)
vapply(iris$Sepal.Length, iris$Species=='setosa', mean)
vapply(iris$Sepal.Length, iris[iris$Species=='setosa'], mean)
tapply(iris$Sepal.Length, iris[iris$Species=='setosa'], mean)
tapply(iris$Sepal.Length, iris$Species=='setosa', mean)
iris$Species == 'setosa'
iris[iris$Species == 'setosa']
iris(iris$Species == 'setosa')
iris[,iris$Species == 'setosa']
vapply(iris$Sepal.Length, iris$Species, mean)
tapply(iris$Sepal.Length, iris$Species, mean)
?apply
vapply()
?vapply
?apply
apply(iris[,1:4], 1, mean)
data("mtcars")
?mtcars
head(mtcars)
tapply(mtcars$mpg, mtcars$cyl, mean)
?with
with(mtcars, tapply(mpg, cyl, mean))
sapply(split(mtcars$mpg, mtcars$cyl), mean)
sapply(split(mtcars$hp, mtcars$cyl), mean)
a <- sapply(split(mtcars$hp, mtcars$cyl), mean)
a
a['4']
a['8'] - a['4']
debug(ls)
ls
ls
ls
?debug
ls
getwd()
setwd("~/Respository/datasciencecoursera/r_programming/")
getwd()
list.files()
setwd("~/Respository/datasciencecoursera/r_programming/ProgrammingAssignment2/")
list.files()
?<<-
?`<<-`
get <- function() x
get(1)
get 1
?solve
function() x
x = 1
function() x
x
get <- function() x
set.seed(20)
x <- rnorm(100)
e <- rnorm(100, 0, 2)
y <- 0.5 + 2 * x +e
summary(y)
plot(x, y)
str(y)
set.seed(10)
x <- rbinom(100, 1, 0.5)
e <- rnorm(100, 0, 2)
y <- 0.5 + 2 * x + e
summary(y)
plot(x, y)
set.seed(1)
x <- rnorm(100)
log.mu <- 0.5 + 0.3 * x
y <- rpois(100, exp(log.mu))
summary(y)
plot(x, y)
set.seed(1)
sample(1:10, 4)
sample(letters, 5)
sample(1:10)
sample(1:10, replacement = TRUE)
sample(1:10, replace = TRUE)
x <- hilbert(1000)
?hilbert
str(svd)
str(Rprof)
set.seed(1)
rpois(5,2)
?lm
set.seed(1)
rpois(5,2)
getwd()
setwd("~/Respository/datasciencecoursera/r_programming/Assignment3/")
list.files()
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
ncol(outcome)
nrow(outcome)
dim(outcome)
outcome[, 11] <- as.numeric(outcome[, 11])
hist(outcome[, 11])
head(outcome[, 11])
sub <- c(outcome[, 2], outcome[, 11])
sub
head(sub)
sub <- outcome[outcome$Hospital.Name, outcome$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack]
sub <- outcome[outcome$Hospital.Name, outcome$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack]
sub <- outcome[outcome$Hospital.Name, outcome$County.Name]
sub <- outcome[c(outcome$Hospital.Name, outcome$County.Name)]
sub <- outcome[c('Hospital.Name', 'County.Name')]
sub
str(sub)
sub <- outcome[c('Hospital.Name', '*Heart*')]
sub <- outcome[:,[2,7]]
sub <- outcome[,[2,7]]
sub <- outcome[,(2,7)]
sub <- outcome[, 2]
sub <- outcome[, 7]
sub <- outcome[, c(2, 7)]
str(sub)
head(sub)
sub <- outcome[, c(2, 7, 11)]
str(sub)
sub1 <- sub[sub$State = 'TX']
sub1 <- sub[sub$State=='TX']
sub1 <- sub[sub$State==TX]
sub1 <- sub[sub$State=="TX"]
sub1 <- sub(sub$State=="TX")
sub1 <- sub[sub$State=="TX"]
tapply(sub, sub$State)
tapply(sub, sub$State=="TX", )
tapply(sub, sub$State=="TX", mean)
str(sub)
sub[sub$State=="Tx"]
sub[sub$State=="TX"]
sub[sub$State=="AL"]
sub(sub$State=="AL")
?$
?`$`
sub$Hospital.Name=="TX"
sub[sub$Hospital.Name=="TX"]
sub[sub$State=="TX"]
colnames(sub)
sub1 <- sub[sub$State=="TX", c(sub$Hospital.Name, sub$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)]
sub1 <- sub(sub$State=="TX", c(sub$Hospital.Name, sub$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack))
sub1 <- sub(sub$State=="TX", sub[,(1,2,3)])
sub1 <- sub(sub$State=="TX")
sub1 <- sub[which sub$State=="TX", c(sub$Hospital.Name, sub$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)]
outcome
colnames(outcome)
col_names <- colnames(outcome)
?of
?unique
?stop
?geterrmessage
?is.element
outcome
sub <- outcome[, c(2, 7, 11)]
head(sub)
str(sub)
sub1 <- sub[which(sub$State=='TX'), sub[,c(2, 7, 11)]
]
colnames(sub)
sub1 <- sub[which(sub$State=='TX'), sub[,c(2, 7)]
]
col_names
sub1 <- sub[which(sub$State=='TX'), c('Hospital.name', 'State')]
sub1 <- sub[which(sub$State=='TX'), c('Hospital.Name', 'State')]
sub1
str(sub1)
sub1 <- sub[which(sub$State=='TX'), c('Hospital.Name', 'State', col_names[11])]
str(sub1)
sub2 <- min.col(sub2[, 3], rm.na = 'TRUE')
sub2 <- min(sub1[, 3], rm.na = TRUE)
sub2
sub2 <- sub1[min(sub1[, 3], rm.na = TRUE)]
sub2 <- sub1[, 3]
str(sub2)
a <- min(sub2, na.rm = TRUE)
a
str(sub2)
str(sub1)
hos <- sub1[which(sub1[, 3]== a), 'Hospital.Name']
hos
getwd()
list.files()
source("best.R")
best("TX", "heart attack")
best("TX", "heart attac")
best("Ta", "heart attack")
outcome_data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcome_data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcome_data[, 11] <- as.numeric(outcome_data[, 11])
col_names <- colnames(outcome_data)
list_outcome = c('heart attack', 'heart failure', 'pneumonia')
source("best.R")
best("Ta", "heart attack")
best("TX", "heart attack")
best("TX", "heart attack")
best("T", "heart attack")
source("best.R")
best("T", "heart attack")
source("best.R")
best("T", "heart attack")
state <- "TX"
list_state <- unique(outcome_data[, 7])
!is.element(state, list_state
)
str(list_state)
source("best.R")
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
best("MD", "pneumoni")
str(stop)
?stop
source("best.R")
best("MD", "pneumoni")
source("best.R")
best("MD", "pneumoni")
best("TX", "heart failure")
best("TX", "heart attack")
best("TX", "heart attack")
best("MD", "pneumonia")
source("best.R")
best("MD", "pneumonia")
best("TX", "heart attack")
str(sub_data)
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
col_names[7]
col_names[11]
best("TX", "heart attack")
best("MD", "pneumonia")
source("best.R")
best("MD", "pneumonia")
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
best("MD", "pneumoni")
best("M", "pneumonia")
