library(slidify)
swirl()
swirl()
library(swirl
)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(lapply())
class(cls_list
)
as.character(cls_list)
sapply(flags,class)
cls_vect <- sapply(flags,class)
class(cls_vect)
sum(flags@orange)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_colors, range)
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
head(shape_mat)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_val <- lapply(flags, unique)
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sappy(flags, unique)
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmasses, summary)
tapply(flags$population, flags$landmass, summary)
bye()
?gl
gl(1,2)
gl(2,2)
library(datasets)
data("iris")
?iris
dim(iris)
head(iris)
vapply(iris$Sepal.Length, iris$Species=='setosa', mean)
vapply(iris$Sepal.Length, iris$Species, mean)
vapply(iris$Sepal.Length, iris$Species=='setosa', mean)
vapply(iris$Sepal.Length, iris[iris$Species=='setosa'], mean)
tapply(iris$Sepal.Length, iris[iris$Species=='setosa'], mean)
tapply(iris$Sepal.Length, iris$Species=='setosa', mean)
iris$Species == 'setosa'
iris[iris$Species == 'setosa']
iris(iris$Species == 'setosa')
iris[,iris$Species == 'setosa']
vapply(iris$Sepal.Length, iris$Species, mean)
tapply(iris$Sepal.Length, iris$Species, mean)
?apply
vapply()
?vapply
?apply
apply(iris[,1:4], 1, mean)
data("mtcars")
?mtcars
head(mtcars)
tapply(mtcars$mpg, mtcars$cyl, mean)
?with
with(mtcars, tapply(mpg, cyl, mean))
sapply(split(mtcars$mpg, mtcars$cyl), mean)
sapply(split(mtcars$hp, mtcars$cyl), mean)
a <- sapply(split(mtcars$hp, mtcars$cyl), mean)
a
a['4']
a['8'] - a['4']
debug(ls)
ls
ls
ls
?debug
ls
sudo ln -sf $(/usr/libexec/java_home)/jre/lib/server/libjvm.dylib /usr/local/lib
install.packages('rJava')
library(rJava)
library(xlsx)
getwd()
setwd('~/Respository/datasciencecoursera/r_programming/')
list.files()
setwd('~/Respository/datasciencecoursera/r_programming/data_cleaning/')
ls
list.files()
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx', '../data_cleaning/gas.xlsx', method = 'curl')
gas <- read.xlsx('gas.xlsx')
dat <- read.xlsx('gas.xlsx',rowIndex = 18:23, colIndex = 7:15)
dat <- read.xlsx('gas.xlsx', rowIndex = 18:23, colIndex = 7:15)
?read.xlsx
dat <- read.xlsx('gas.xlsx', sheetIndex = 1,rowIndex = 18:23, colIndex = 7:15)
sum(dat$Zip*dat$Ext,na.rm=T)
install.packages('XML')
fileUrl <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml'
library(XML)
doc <- xmlTreeParse(fileUrl, useInternalNodes = TRUE)
doc <- xmlTreeParse(fileUrl, useInternal = TRUE)
?xmlTreeParse
doc <- xmlTreeParse(fileUrl, useInternal = TRUE)
fileUrl <- 'http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml'
doc <- xmlTreeParse(fileUrl, useInternal = TRUE)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
rootNode[[1]]
str(rootNode)
str(doc)
xmlName(rootNode)
xpathSApply(rootNode, "//zipcode", 21231 )
xpathSApply(rootNode, "//zipcode", xmlValue )
a <-xpathSApply(rootNode, "//zipcode", xmlValue )
a
a[which(a==21231)]
a <-xpathSApply(rootNode, "//zipcode", xmlValue )
a[which(a==21231)]
dim(a)
length(a)
a< a[which(a==21231)]
a<- a[which(a==21231)]
length(a)
list.files()
install.packages('data.table')
library(data.table)
DT <- fread('housing.csv')
pwgtp15
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
pwgtp15 <- RT
pwgtp15 <- RT
pwgtp15 <- 'RT'
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(tapply(DT$RT,DT$SEX,mean))
V
sapply(split(DT$pwgtp15,DT$SEX),mean)
a = c(1, 2, 3)
for(i in a){print(i)}
list.files()
setwd("../Assignment3/")
list.files()
source('rankall.R')
rankall("heart attack", 20)
source('rankall.R')
rankall("heart attack", 20)
rankall("heart attack", 1)
source('rankall.R')
rankall("heart attack", 1)
rankall("heart attack", 20)
rankall("heart attack", 20)
source('rankall.R')
source('rankall.R')
rankall("heart attack", 20)
source('rankall.R')
rankall("heart attack", 20)
source('rankall.R')
rankall("heart attack", 20)
source('rankall.R')
head(rankall("heart attack", 20), 10)
source('rankall.R')
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
source('rankall.R')
tail(rankall("heart failure"), 10)
source('rankall.R')
tail(rankall("heart failure"), 10)
source('rankall.R')
str(rankall("heart failure"))
(rankall("heart failure")
)
source('rankall.R')
(rankall("heart failure"))
source('rankall.R')
tail(rankall("heart failure"), 10)
head(rankall("heart attack", 20), 10)
source('rankall.R')
head(rankall("heart attack", 20), 10)
source('rankall.R')
head(rankall("heart attack", 20), 10)
source('rankall.R')
head(rankall("heart attack", 20), 10)
source('rankall.R')
head(rankall("heart attack", 20), 10)
source('rankall.R')
head(rankall("heart attack", 20), 10)
head(rankall("heart attack", '20'), 10)
source('rankall.R')
head(rankall("heart attack", '20'), 10)
source('rankall.R')
head(rankall("heart attack", '20'), 10)
head(rankall("heart attack", 20), 10)
head(rankall("heart attack", 'best'), 10)
?is.character
is.character('best')
is.character(best)
source('rankall.R')
head(rankall("heart attack", 'best'), 10)
head(rankall("heart attack", 1), 10)
source('rankall.R')
head(rankall("heart attack", 1), 10)
is.integer(1)
is.integer(1)
class(1)
type(1)
is.numeric(1)
source('rankall.R')
head(rankall("heart attack", 20), 10)
source('rankall.R')
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("pneumonia", "worst"), 3)
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
source('rankall.R')
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("pneumonia", "worst"), 3)
source('rankall.R')
tail(rankall("pneumonia", "worst"), 3)
source('rankall.R')
tail(rankall("pneumonia", "worst"), 3)
source('rankall.R')
tail(rankall("pneumonia", "worst"), 3)
source('rankall.R')
tail(rankall("pneumonia", "worst"), 3)
source('rankall.R')
tail(rankall("pneumonia", "worst"), 3)
source('rankall.R')
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
source("best.R")
best("SC", "heart attack")
best("NY", "pneumonia")''
best("NY", "pneumonia")
best("AK", "pneumonia")
best("AK", "pneumonia")
best("AK", "pneumonia")
rankhospital("NC", "heart attack", "worst")
source("rankhospital.R")
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r
r <- rankall("pneumonia", "worst")
r
r <- rankall("heart failure", 10)
r
